/*
 * Books API
 *
 * This web service offers information on books
 *
 * API version: 0.1.9
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger

import (
	"fmt"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

type Route struct {
	Name        string
	Method      string
	Pattern     string
	HandlerFunc http.HandlerFunc
}

type Routes []Route

func NewRouter() *mux.Router {
	router := mux.NewRouter().StrictSlash(true)
	for _, route := range routes {
		var handler http.Handler
		handler = route.HandlerFunc
		handler = Logger(handler, route.Name)

		router.
			Methods(route.Method).
			Path(route.Pattern).
			Name(route.Name).
			Handler(handler)
	}

	return router
}

func Index(w http.ResponseWriter, r *http.Request) {
	fmt.Fprintf(w, "Hello World!")
}

var routes = Routes{
	Route{
		"Index",
		"GET",
		"/",
		Index,
	},

	Route{
		"AuthorsAuthorIdBooksGet",
		strings.ToUpper("Get"),
		"/authors/{authorId}/books/",
		AuthorsAuthorIdBooksGet,
	},

	Route{
		"AuthorsAuthorIdDelete",
		strings.ToUpper("Delete"),
		"/authors/{authorId}",
		AuthorsAuthorIdDelete,
	},

	Route{
		"AuthorsAuthorIdGet",
		strings.ToUpper("Get"),
		"/authors/{authorId}",
		AuthorsAuthorIdGet,
	},

	Route{
		"AuthorsAuthorIdPut",
		strings.ToUpper("Put"),
		"/authors/{authorId}",
		AuthorsAuthorIdPut,
	},

	Route{
		"AuthorsPost",
		strings.ToUpper("Post"),
		"/authors/",
		AuthorsPost,
	},

	Route{
		"BooksBookIdAuthorsGet",
		strings.ToUpper("Get"),
		"/books/{bookId}/authors/",
		BooksBookIdAuthorsGet,
	},

	Route{
		"BooksBookIdDelete",
		strings.ToUpper("Delete"),
		"/books/{bookId}",
		BooksBookIdDelete,
	},

	Route{
		"BooksBookIdGet",
		strings.ToUpper("Get"),
		"/books/{bookId}",
		BooksBookIdGet,
	},

	Route{
		"BooksBookIdPublishersGet",
		strings.ToUpper("Get"),
		"/books/{bookId}/publishers/",
		BooksBookIdPublishersGet,
	},

	Route{
		"BooksBookIdPut",
		strings.ToUpper("Put"),
		"/books/{bookId}",
		BooksBookIdPut,
	},

	Route{
		"BooksPost",
		strings.ToUpper("Post"),
		"/books/",
		BooksPost,
	},

	Route{
		"PublishersPost",
		strings.ToUpper("Post"),
		"/publishers/",
		PublishersPost,
	},

	Route{
		"PublishersPublisherIdBooksGet",
		strings.ToUpper("Get"),
		"/publishers/{publisherId}/books/",
		PublishersPublisherIdBooksGet,
	},

	Route{
		"PublishersPublisherIdDelete",
		strings.ToUpper("Delete"),
		"/publishers/{publisherId}",
		PublishersPublisherIdDelete,
	},

	Route{
		"PublishersPublisherIdGet",
		strings.ToUpper("Get"),
		"/publishers/{publisherId}",
		PublishersPublisherIdGet,
	},

	Route{
		"PublishersPublisherIdPut",
		strings.ToUpper("Put"),
		"/publishers/{publisherId}",
		PublishersPublisherIdPut,
	},
}
